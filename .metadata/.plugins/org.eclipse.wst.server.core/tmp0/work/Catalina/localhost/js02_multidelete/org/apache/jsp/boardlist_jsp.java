/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-02-23 17:09:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.md.dao.MDBoardDao;
import com.md.dto.MDBoardDto;

public final class boardlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./form/header.jsp", Long.valueOf(1578306639334L));
    _jspx_dependants.put("/./form/footer.jsp", Long.valueOf(1578306695263L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.md.dao.MDBoardDao");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.md.dto.MDBoardDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
 request.setCharacterEncoding("UTF-8");
      out.write("\r\n");
      out.write("    ");
 response.setContentType("text/html; charset=UTF-8");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src = \"https://code.jquery.com/jquery-3.4.1.js\">\r\n");
      out.write("\r\n");
      out.write("$(function () {\r\n");
      out.write("\t$(\"#muldelform\").submit(function () {\r\n");
      out.write("\t\tif($(\"#muldelform input :checked\").length ==0){\r\n");
      out.write("\t\t\talert(\"하나 이상 체크해주세요\");\r\n");
      out.write("\t\t\tretrun false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\tfunction writeForm() {\r\n");
      out.write("\t\tlocation.href =\"boardwriteform.jsp\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction allchk(bool) {\r\n");
      out.write("\t\tvar chks = document.getElementsByName(\"chk\"); //node list로 반환된다 [chk,chk,chk,...]\r\n");
      out.write("\t\tfor(var i = 0; i <chks.length;i++){\r\n");
      out.write("\t\t\tchks[i].checked = bool;\t\t\t\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");

	MDBoardDao dao = new MDBoardDao();
	List<MDBoardDto> list = dao.selectList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    ");
 request.setCharacterEncoding("UTF-8");
      out.write("\r\n");
      out.write("    ");
 response.setContentType("text/html; charset=UTF-8");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\theader{\r\n");
      out.write("\tbackground-color: skyblue;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfooter{\r\n");
      out.write("\tbackground-color: skyblue;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tline-height: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ta{\r\n");
      out.write("\ttext-decoration: none;\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<header><a href = \"./boardlist.jsp\">HOME</a></header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<!-- include된 파일이 현재 어디에 있는지(어디에 포함되고 있는지)를 기준으로 상대경로 -->\t\r\n");
      out.write("\t\r\n");
      out.write("\t<h1>All list</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<form action=\"./muldel.jsp\" method = \"post\" id = \"muldelform\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t<col width=\"30\">\r\n");
      out.write("\t\t\t<col width=\"50\">\r\n");
      out.write("\t\t\t<col width=\"100\">\r\n");
      out.write("\t\t\t<col width=\"300\">\r\n");
      out.write("\t\t\t<col width=\"100\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th><input type =\"checkbox\" name = \"all\" onclick =\"allchk(this.checked);\"></th>\r\n");
      out.write("\t\t\t\t<th>No</th>\r\n");
      out.write("\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t<th>Title</th>\r\n");
      out.write("\t\t\t\t<th>Date</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				if(list.size() ==0){
					
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"5\">-----There is no comment here-----</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
			
					
				}else{
					for(MDBoardDto dto :list){
						
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><input type = \"checkbox\" name = \"chk\" value =\"");
      out.print(dto.getSeq());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(dto.getSeq() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(dto.getWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a href = \"./detail.jsp?seq=");
      out.print(dto.getSeq());
      out.write('"');
      out.write('>');
      out.print(dto.getTitle() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(dto.getRegdate());
      out.write("</td>\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
						
					}
				}
			
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"5\">\r\n");
      out.write("\t\t\t\t\t<input type = \"submit\" value = \"select delete\">\r\n");
      out.write("\t\t\t\t\t<input type = \"button\" value = \"insert\" onclick=\"writeForm();\">\r\n");
      out.write("\t\t\t\t</td>\t\t\r\n");
      out.write("\t\t\t</tr>\t\t\t\t\t\r\n");
      out.write("\t\t</table>\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    ");
 request.setCharacterEncoding("UTF-8");
      out.write("\r\n");
      out.write("    ");
 response.setContentType("text/html; charset=UTF-8");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<footer>KH정보교육권 &copy; all right reserved...</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
